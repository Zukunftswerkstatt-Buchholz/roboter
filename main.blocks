<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id=")k(Nv_sPr~)Nk?!7QT2q" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="lK0:mA~fd:@TV,PvQbx7"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace Roboter {" line1="    const IICADRRESS = 0x10;" line2="    const id = &quot;245rtzf000601-1512&quot;;" line3="    let velocity = 0.26; //unit: mm/ms" line4="    let angularVelocity = 360 / 650; //unit: degree/ms" line5="    let tuningSpeed = 100;" line6="    export enum Dir {" line7="        //% block=&quot;vorwärts&quot;" line8="        CW = 0," line9="        //% block=&quot;rückwärts&quot;" line10="        CCW = 1" line11="    }" line12="" line13="    function writeData(buf: number[]): void {" line14="        pins.i2cWriteBuffer(IICADRRESS, pins.createBufferFromArray(buf));" line15="    }" line16="" line17="    // ---- Drehen ----" line18="" line19="    //% blockId=id+&quot;turnLeft90&quot;" line20="    //% group=&quot;Drehen&quot;" line21="    //% block=&quot;90 Grad nach Links drehen&quot;" line22="    //% weight=490" line23="    export function turnLeft90() {" line24="        let wait = 90 / angularVelocity;" line25="        basic.pause(wait);" line26="        writeData([0x00, 1, tuningSpeed]);" line27="        writeData([0x02, 0, tuningSpeed]);" line28="        basic.pause(wait);" line29="        writeData([0x00, 0, 0]);" line30="        writeData([0x02, 0, 0]);" line31="        basic.pause(wait);" line32="    }" line33="" line34="    //% blockId=id+&quot;turnRight90&quot;" line35="    //% group=&quot;Drehen&quot;" line36="    //% block=&quot;90 Grad nach Rechts drehen&quot;" line37="    //% weight=480" line38="    export function turnRight90() {" line39="        let wait2 = 90 / angularVelocity;" line40="        writeData([0x00, 0, tuningSpeed]);" line41="        writeData([0x02, 1, tuningSpeed]);" line42="        basic.pause(wait2);" line43="        writeData([0x00, 0, 0]);" line44="        writeData([0x02, 0, 0]);" line45="    }" line46="" line47="    //% blockId=id+&quot;turnDegrees&quot;" line48="    //% group=&quot;Drehen&quot;" line49="    //% block=&quot;um $degrees Grad drehen&quot;" line50="    //% degrees.defl=-45" line51="    //% weight=470" line52="    export function turnDegrees(degrees: number) {" line53="        if (degrees &lt; 0) {" line54="            degrees = degrees * (-1);" line55="            let wait3 = degrees / angularVelocity;" line56="            writeData([0x00, 0, tuningSpeed]);" line57="            writeData([0x02, 1, tuningSpeed]);" line58="            basic.pause(wait3);" line59="            writeData([0x00, 0, 0]);" line60="            writeData([0x02, 0, 0]);" line61="        } else {" line62="            let wait32 = degrees / angularVelocity;" line63="            writeData([0x00, 1, tuningSpeed]);" line64="            writeData([0x02, 0, tuningSpeed]);" line65="            basic.pause(wait32);" line66="            writeData([0x00, 0, 0]);" line67="            writeData([0x02, 0, 0]);" line68="        }" line69="    }" line70="" line71="    // ---- Fahren ----" line72="" line73="    //% blockId=id+&quot;driveTime&quot;" line74="    //% block=&quot;Für $time ms|%direction|fahren&quot;" line75="    //% group=&quot;Fahren&quot;" line76="    //% time.defl=1000" line77="    //% direction.fieldEditor=&quot;gridpicker&quot;" line78="    //% direction.fieldOptions.width=220" line79="    //% direction.fieldOptions.columns=3" line80="    //% weight=390" line81="    export function driveTime(time: number, direction: Dir) {" line82="        writeData([0x00, direction, 200]);" line83="        writeData([0x02, direction, 200]);" line84="        basic.pause(time);" line85="        writeData([0x00, 0, 0]);" line86="        writeData([0x02, 0, 0]);" line87="    }" line88="" line89="    //% blockId=id+&quot;driveDistance&quot;" line90="    //% block=&quot;Für $distance cm fahren&quot;" line91="    //% group=&quot;Fahren&quot;" line92="    //% distance.defl=10" line93="    //% weight=380" line94="    export function driveDistance(distance: number) {" line95="        let direction = 0;" line96="        if (distance &lt; 0) {" line97="            direction = 1;" line98="            distance = distance * (-1);" line99="        }" line100="        let wait4 = ((distance * 10) / velocity); // (cm*10)/mm/ms " line101="        writeData([0x00, direction, 200]);" line102="        writeData([0x02, direction, 200]);" line103="        basic.pause(wait4)" line104="        writeData([0x00, 0, 0]);" line105="        writeData([0x02, 0, 0]);" line106="    }" line107="" line108="    //% blockId=id+&quot;stopMotor&quot;" line109="    //% block=&quot;Robotor anhalten&quot;" line110="    //% group=&quot;Fahren&quot;" line111="    //% weight=370" line112="    export function stopMotor() {" line113="        writeData([0x00, 0, 0]);" line114="        writeData([0x02, 0, 0]);" line115="    }" line116="" line117="    //% blockId=id+&quot;driveNonBlockingForever&quot;" line118="    //% block=&quot;Für immer |%direction|mit Geschwindigkeit $speed fahren&quot;" line119="    //% group=&quot;Fahren&quot;" line120="    //% direction.fieldEditor=&quot;gridpicker&quot;" line121="    //% direction.fieldOptions.width=220" line122="    //% direction.fieldOptions.columns=3" line123="    //% speed.min=0 speed.max=255" line124="    //% speed.defl=200" line125="    //% direction.defl=0" line126="    //% weight=360" line127="    export function driveNonBlockingForever(direction: Dir, speed: number) {" line128="        writeData([0x00, direction, speed]);" line129="        writeData([0x02, direction, speed]);" line130="    }" line131="" line132="    // ---- Erweitert Fahren ----" line133="" line134="    //% blockId=id+&quot;driveNonBlockingForeverLeftSpeed&quot;" line135="    //% block=&quot;Für immer |%direction|mit Geschwindigkeit $speed Links fahren&quot;" line136="    //% group=&quot;Erweiterte Steuerung&quot;" line137="    //% direction.fieldEditor=&quot;gridpicker&quot;" line138="    //% direction.fieldOptions.width=220" line139="    //% direction.fieldOptions.columns=3" line140="    //% speed.min=0 speed.max=255" line141="    //% speed.defl=200" line142="    //% direction.defl=0" line143="    //% weight=290" line144="    export function driveNonBlockingForeverLeft(direction: Dir, speed: number) {" line145="        writeData([0x00, direction, speed]);" line146="    }" line147="" line148="    //% blockId=id+&quot;driveNonBlockingForeverRightSpeed&quot;" line149="    //% block=&quot;Für immer |%direction|mit Geschwindigkeit $speed Rechts fahren&quot;" line150="    //% group=&quot;Erweiterte Steuerung&quot;" line151="    //% direction.fieldEditor=&quot;gridpicker&quot;" line152="    //% direction.fieldOptions.width=220" line153="    //% direction.fieldOptions.columns=3" line154="    //% speed.min=0 speed.max=255" line155="    //% speed.defl=200" line156="    //% direction.defl=0" line157="    //% weight=280" line158="    export function driveNonBlockingForeverRight(direction: Dir, speed: number) {" line159="        writeData([0x02, direction, speed]);" line160="" line161="    }" line162="" line163="    //% blockId=id+&quot;driveTimeNonBlocking&quot;" line164="    //% block=&quot;Für $time ms|%direction|fahren, dabei das Programm weiter laufen lassen&quot;" line165="    //% group=&quot;Erweiterte Steuerung&quot;" line166="    //% time.defl=1000" line167="    //% direction.fieldEditor=&quot;gridpicker&quot;" line168="    //% direction.fieldOptions.width=220" line169="    //% direction.fieldOptions.columns=3" line170="    //% speed.min=0 speed.max=255" line171="    //% speed.defl=200" line172="    //% direction.defl=0" line173="    //% weight=270" line174="    export function driveTimeNonBlocking(time: number, direction: Dir) {" line175="        control.inBackground(function () {" line176="            writeData([0x00, direction, 200]);" line177="            writeData([0x02, direction, 200]);" line178="            basic.pause(time);" line179="            writeData([0x00, 0, 0]);" line180="            writeData([0x02, 0, 0]);" line181="        })" line182="    }" line183="" line184="" line185="    // ---- Konfiguration ----" line186="" line187="    //% blockId=id+&quot;setVelocity&quot;" line188="    //% block=&quot;1s sind $distance cm&quot;" line189="    //% group=&quot;Konfiguration&quot;" line190="    //% weight=190" line191="    export function setVelocity(distance: number) {" line192="        velocity = distance / 100; // unit: mm/ms" line193="    }" line194="" line195="    //% blockId=id+&quot;setAngularVelocity&quot;" line196="    //% block=&quot;500ms sind $degrees Grad&quot;" line197="    //% group=&quot;Konfiguration&quot;" line198="    //% weight=180" line199="    export function setAngularVelocity(degrees: number) {" line200="        angularVelocity = degrees / 500; //unit: degree/ms" line201="    }" line202="" line203="    //% blockId=id+&quot;driveFor1000Ms&quot;" line204="    //% block=&quot;für 1s fahren&quot;" line205="    //% group=&quot;Konfiguration&quot;" line206="    //% weight=170" line207="    export function driveFor1000Ms() {" line208="        writeData([0x00, 0, 200]);" line209="        writeData([0x02, 0, 200]);" line210="        basic.pause(1000);" line211="        writeData([0x00, 0, 0]);" line212="        writeData([0x02, 0, 0]);" line213="    }" line214="" line215="    //% blockId=id+&quot;turnFor500ms&quot;" line216="    //% block=&quot;für 500ms fahren&quot;" line217="    //% group=&quot;Konfiguration&quot;" line218="    //% weight=160" line219="    export function turnFor500ms() {" line220="        writeData([0x00, 0, tuningSpeed]);" line221="        writeData([0x02, 1, tuningSpeed]);" line222="        basic.pause(500);" line223="        writeData([0x00, 0, 0]);" line224="        writeData([0x02, 0, 0]);" line225="    }" line226="}" numlines="227"></mutation></block></statement></block></xml>